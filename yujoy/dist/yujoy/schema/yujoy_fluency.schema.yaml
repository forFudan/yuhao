# Rime schema
# encoding: utf-8

schema:
  schema_id: yujoy_fluency
  name: 卿雲·全碼連打
  version: 20240512
  author:
    - 項目策劃 錢多多
    - 技术支持 forFudan
    - Rime方案 <https://yuhao.forfudan.com/docs/joy>
    - 官方QQ群 374630778
  description: |
    全碼單字無空格連續輸入模式.
    - 因爲只輸入全碼單字,不需要額外記憶簡碼和詞語.
    - 不需要在三碼和四碼後猶豫是否要加空格.
    - 大拇指的負擔顯著降低.
    - 速度當降低,達到了1.2584.
    - 準確性方面,本模式選重率低於打詞,但高於簡碼單字派.
    - 本模式不會出現打簡碼或打詞時的踩空回删現象.
    - 本模式允許用户在最短時間内以最小成本實現雙盲打.
    - 因爲單字全碼輸入的原故,其準確性很高,出現重碼時也可以通過語句去重.
    - 四碼及以下,固定字頻詞頻,允許簡碼字詞,以兼容四碼定長習慣,保證確定性.
    - 碼長大約在 3.2 左右,略高於簡體優先簡碼派的 3.15.
      低於繁簡通打簡碼派的 3.25. 高於詞派的 2.5 左右.

  dependencies:
    - yujoy
    - yujoy_full
    - yujoy_chaifen
    - yuhao_pinyin

switches:
  - options:
      - yuhao_chaifen.off
      - yuhao_chaifen.lv1
      - yuhao_chaifen.lv2
      - yuhao_chaifen.lv3
    states: [〇註解, 一重註解, 二重註解, 三重註解]
    reset: 0
  - options:
      - cjk
      - yuhao_charset_filter_common
      - yuhao_charset_filter_tonggui
      - yuhao_charset_filter_harmonic
    states: [全漢字, 常用字, 通规字, 陸標繁]
    reset: 0
    # Control+Shfit+O
  - name: traditionalization
    states: [简保持, 简转繁]
    reset: 0
    # Control+Shift+F
  - name: simplification
    states: [繁保持, 繁轉簡]
    reset: 0
    # Control+Shift+J
  - name: yuhao_autocompletion_filter
    reset: 0
    states: [輸入預測, 精確匹配]
    # Control+Shift+Y
  - name: ascii_mode
    reset: 0
    states: [中文, 西文]
  - name: full_shape
    states: [半角, 全角]
  - name: ascii_punct
    states: [。，, ．，]
    reset: 0

engine:
  processors:
    - lua_processor@*yuhao.yuhao_switch_proc@yuhao_macro
    - ascii_composer
    - recognizer
    - lua_processor@*yuhao.yuhao_chaifen_processor
    - key_binder
    - lua_processor@*yuhao.yuhao_auto_select
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    ##########
    # 翻譯器 #
    ##########
    # 四碼及以下,固定字頻詞頻,以兼容四碼定長習慣,保證確定性.
    # 直接使用四碼定長字典.
    - table_translator@yujoy
    #
    # 全拼的模式,對非預設短語和用户習語進行自動調頻.
    # 由於分割編碼時不穩定,常有生僻字跳出,故而只對常用字進行成句.
    # 只對常用字進行成句,會使某些專有名詞不出現,可通過碼表翻譯器解決.
    - script_translator
    - script_translator@translator_extended
    #
    # 全拼輸入.
    - script_translator@pinyin
    #
    # 四碼以上,固定詞頻的連續輸入.允許聯想長詞以快速上屏.
    # 直接使用全碼單字字典,允許成句.分割編碼時,極少出現生僻字.
    # 對於排在第二項的兩碼字根不會成句,如[上巳],可通過編碼翻譯器解決.
    # 未完全匹配,則會出現字母串不斷閃出,影響視覺體驗,可通過編碼翻譯器解決.
    - table_translator@yujoy_full
    #
    - lua_translator@*yuhao.yuhao_switch_tr@yuhao_macro
  filters:
    - lua_filter@*yuhao.yuhao_autocompletion_filter
    - lua_filter@*yuhao.yuhao_charset_filter_common
    - lua_filter@*yuhao.yuhao_charset_filter_tonggui
    - lua_filter@*yuhao.yuhao_charset_filter_harmonic
    - simplifier@traditionalize
    - simplifier@simplify
    - lua_filter@*yuhao.yuhao_chaifen_filter
    - uniquifier

yuhao_auto_select:
  max_chars: 8

traditionalize:
  tags: [abc]
  option_name: traditionalization
  opencc_config: s2t.json
  tips: all
  comment_format:
    - xform/^/〔/
    - xform/$/〕/

simplify:
  tags: [abc]
  option_name: simplification
  opencc_config: t2s.json
  tips: all
  comment_format:
    - xform/^/〔/
    - xform/$/〕/

schema_name:
  code: yujoy
  spelling: yujoy_chaifen

yuhao_chaifen:
  lua:
    switch_key: "Control+c"
    cycle_key: "Shift+Control+C"

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: " `"

translator:
  dictionary: yujoy_fluency
  db_class: tabledb
  enable_completion: false
  initial_quality: 8
  # preedit_format:
  #   - "xlit|abcdefghijklmnopqrstuvwxyz|木舌下又也一竹土小日口子火水上生石十田金人食女足月查|"

translator_extended:
  dictionary: yujoy_full
  db_class: tabledb
  enable_completion: false
  initial_quality: 4
  # preedit_format:
  #   - "xlit|abcdefghijklmnopqrstuvwxyz|木舌下又也一竹土小日口子火水上生石十田金人食女足月查|"

yujoy:
  dictionary: yujoy
  db_class: tabledb
  enable_completion: false
  enable_sentence: false
  enable_user_dict: false
  enable_encoder: false
  encode_commit_history: false # 对连续上屏的词自动成词
  max_phrase_length: 4 # 自动成词的最大词长
  initial_quality: 16

pinyin:
  dictionary: yuhao_pinyin
  enable_completion: false
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/
  initial_quality: 2

yujoy_full:
  dictionary: yujoy_full
  db_class: tabledb
  enable_completion: true
  enable_sentence: true
  enable_user_dict: false
  enable_encoder: false
  encode_commit_history: false # 对连续上屏的词自动成词
  max_phrase_length: 4 # 自动成词的最大词长
  initial_quality: 0

punctuator:
  import_preset: yuhao.symbols
  half_shape:
    "`": "`"
    "#": "#"
    "%": "%"
    "*": "*"
    "\\": "、"
    "[": "「"
    "]": "」"
    "{": "『"
    "}": "』"
    "/": "/"
    "|": "|"

key_binder:
  bindings:
    - { when: always, accept: "Control+period", toggle: ascii_punct }
    - { when: always, accept: "Control+Shift+period", toggle: ascii_punct }
    - { when: always, accept: "Control+Shift+J", toggle: simplification }
    - { when: always, accept: "Control+Shift+F", toggle: traditionalization }
    - {
        when: always,
        accept: "Control+Shift+O",
        toggle: yuhao_charset_filter_common,
      } # 字符集過濾
    - { when: has_menu, accept: "0", toggle: yuhao_charset_filter_common } # 字符集過濾
    - { when: has_menu, accept: "/", toggle: yuhao_chaifen.off } # 拆分
    - {
        when: always,
        accept: "Control+Shift+Y",
        toggle: yuhao_autocompletion_filter,
      } # 輸入預測
    - { when: has_menu, accept: semicolon, send: 2 } # 分号次选
    - { when: has_menu, accept: apostrophe, send: 3 } # 引号三选
    - { when: has_menu, accept: minus, send: Page_Up } # 減號上翻頁
    - { when: has_menu, accept: equal, send: Page_Down } # 等號下翻頁
    - { when: has_menu, accept: Tab, send: Escape } # Tab 下翻頁
    - { when: composing, accept: Escape, send: "Shift+BackSpace" } # 逐字删除

recognizer:
  import_preset: default
  patterns:
    uppercase: "^(?![`;]).*[A-Z][-_+.'0-9A-Za-z]*$"
    punct: "^/([0-9]0?|[A-Za-z]+)?$"
    number: "^[-+]?[0-9][,.:0-9]*[%]?$"
    macro_unicode: "^/uni(/[a-zA-Z0-9]*)*$"

style:
  horizontal: false
  inline_preedit: true
  preedit_type: preview
  inline_candidate: true

# 自定義宏
yuhao_macro:
  funckeys:
    macro: [0x2f] # 當輸入串以 "/" 開頭時, 認爲是宏調用
  macros:
    help:
      # - { type: tip, name: ❖配置中心 }
      - { type: switch, name: traditionalization, states: [☐简保持, ☑简转繁] }
      - { type: switch, name: simplification, states: [☐繁保持, ☑繁轉簡] }
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    set:
      # - { type: tip, name: ❖配置中心 }
      - { type: switch, name: traditionalization, states: [☐简保持, ☑简转繁] }
      - { type: switch, name: simplification, states: [☐繁保持, ☑繁轉簡] }
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    date:
      - { type: eval, name: ☀日期, expr: return os.date("%Y-%m-%d") }
      - { type: eval, name: ⛅年月日, expr: return os.date("%Y年%m月%d日") }
    time:
      - { type: eval, name: ⌚時間, expr: return os.date("%H:%M:%S") }
      - { type: eval, name: Ⓣ時間, expr: return os.date("%Y%m%d%H%M") }
      - { type: eval, name: Ⓢ時間戳, expr: return tostring(os.time()) }
    div:
      - {
          type: radio,
          names:
            [
              yuhao_chaifen.off,
              yuhao_chaifen.lv1,
              yuhao_chaifen.lv2,
              yuhao_chaifen.lv3,
            ],
          states: [☐☐☐註解, ☑☐☐註解, ☐☑☐註解, ☐☐☑註解],
        }
    cjk:
      - {
          type: radio,
          names:
            [
              utf8,
              yuhao_charset_filter_common,
              yuhao_charset_filter_tonggui,
              yuhao_charset_filter_harmonic,
            ],
          states: [☐☐全漢字, ☐☑常用字, ☑☐通规字, ☑☑陸標繁],
        }
    guji:
      - {
          type: switch,
          name: yuhao_charset_filter_harmonic,
          states: [☐未篩選, ☑陸標繁],
        }
    trad:
      - { type: switch, name: traditionalization, states: [☐不轉換, ☑簡轉繁] }
    simp:
      - { type: switch, name: simplification, states: [☐不轉換, ☑繁轉簡] }
    full:
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
    half:
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
    punc:
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    dot:
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    dist:
      - type: eval
        expr: >
          return function(args)
            return string.format("librime: [%s]", rime_api.get_rime_version())
          end
      - type: eval
        expr: >
          return function(args)
            return string.format("distribution: [%s](%s/%s)",
              rime_api.get_distribution_name(),
              rime_api.get_distribution_code_name(),
              rime_api.get_distribution_version())
          end
    uni:
      - type: eval
        hijack: true
        expr: return require("yuhao.yuhao_core").unicode()